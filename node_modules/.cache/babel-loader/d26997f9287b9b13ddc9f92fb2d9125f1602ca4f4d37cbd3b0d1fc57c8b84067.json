{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport ProductView from '../views/ProductView.vue';\nimport CategoryView from '../views/CategoryView.vue';\nimport SearchView from '../views/SearchView.vue';\nimport CartView from '../views/CartView.vue';\nimport SignUpView from '../views/SignUpView.vue';\nimport LogInView from '../views/LogInView.vue';\nimport MyAccountView from '../views/MyAccountView.vue';\nimport store from '@/store';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/sign-up',\n  name: 'sign-up',\n  component: SignUpView\n  //props: route => ({ query: route.query.q })\n}, {\n  path: '/log-in',\n  name: 'log-in',\n  component: LogInView\n  //props: route => ({ query: route.query.q })\n}, {\n  path: '/my-account',\n  name: 'my-account',\n  component: MyAccountView,\n  meta: {\n    requireLogin: true\n  }\n  //props: route => ({ query: route.query.q })\n}, {\n  path: '/search',\n  name: 'search',\n  component: SearchView\n  //props: route => ({ query: route.query.q })\n},, {\n  path: '/cart',\n  name: 'cart',\n  component: CartView\n  //props: route => ({ query: route.query.q })\n}, {\n  path: '/:category_slug/:product_slug',\n  name: 'product',\n  component: ProductView\n}, {\n  path: '/:category_slug',\n  name: 'category',\n  component: CategoryView\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n    next({\n      name: 'log-in',\n      query: {\n        to: path\n      }\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","HomeView","ProductView","CategoryView","SearchView","CartView","SignUpView","LogInView","MyAccountView","store","routes","path","name","component","meta","requireLogin","router","history","beforeEach","to","from","next","matched","some","record","state","isAuthenticated","query"],"sources":["/home/osboxes/0dir/shipshop/shipshop-ux/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\n\nimport HomeView from '../views/HomeView.vue'\nimport ProductView from '../views/ProductView.vue'\nimport CategoryView from '../views/CategoryView.vue'\nimport SearchView from '../views/SearchView.vue'\nimport CartView from '../views/CartView.vue'\nimport SignUpView from '../views/SignUpView.vue'\nimport LogInView from '../views/LogInView.vue'\nimport MyAccountView from '../views/MyAccountView.vue'\nimport store from '@/store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/sign-up',\n    name: 'sign-up',\n    component: SignUpView,\n    //props: route => ({ query: route.query.q })\n  },\n  {\n    path: '/log-in',\n    name: 'log-in',\n    component: LogInView,\n    //props: route => ({ query: route.query.q })\n  },\n  {\n    path: '/my-account',\n    name: 'my-account',\n    component: MyAccountView,\n    meta:{\n      requireLogin:true\n    }\n    //props: route => ({ query: route.query.q })\n  },\n  {\n    path: '/search',\n    name: 'search',\n    component: SearchView,\n    //props: route => ({ query: route.query.q })\n  },,\n  {\n    path: '/cart',\n    name: 'cart',\n    component: CartView,\n    //props: route => ({ query: route.query.q })\n  },\n  {\n    path:'/:category_slug/:product_slug',\n    name:'product',\n    component:ProductView\n  },\n  {\n    path:'/:category_slug',\n    name:'category',\n    component:CategoryView\n  },\n  \n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nrouter.beforeEach((to,from,next)=>{\n\n  if(to.matched.some(record=>record.meta.requireLogin) && !store.state.isAuthenticated){\n    next({name:'log-in',query:{to:path}})\n  }else{\n    next()\n  }\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAE/D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEZ;AACb,CAAC,EACD;EACEU,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,wBAAwB;AAClF,CAAC,EACD;EACEF,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP;EACX;AACF,CAAC,EACD;EACEK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN;EACX;AACF,CAAC,EACD;EACEI,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,aAAa;EACxBM,IAAI,EAAC;IACHC,YAAY,EAAC;EACf;EACA;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAET;EACX;AACF,CAAC,GACD;EACEO,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;EACX;AACF,CAAC,EACD;EACEM,IAAI,EAAC,+BAA+B;EACpCC,IAAI,EAAC,SAAS;EACdC,SAAS,EAACX;AACZ,CAAC,EACD;EACES,IAAI,EAAC,iBAAiB;EACtBC,IAAI,EAAC,UAAU;EACfC,SAAS,EAACV;AACZ,CAAC,CAEF;AAED,MAAMa,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,oBAAoB,EAAE;EAC/BU;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAEhC,IAAGF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAEA,MAAM,CAACV,IAAI,CAACC,YAAY,CAAC,IAAI,CAACN,KAAK,CAACgB,KAAK,CAACC,eAAe,EAAC;IACnFL,IAAI,CAAC;MAACT,IAAI,EAAC,QAAQ;MAACe,KAAK,EAAC;QAACR,EAAE,EAACR;MAAI;IAAC,CAAC,CAAC;EACvC,CAAC,MAAI;IACHU,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'LogInView',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errors: []\n    };\n  },\n  mounted() {\n    document.title = 'ShipShop: Log In';\n  },\n  methods: {\n    async submitForm() {\n      axios.defaults.headers.common['Authorization'] = '';\n      localStorage.removeItem('token');\n      const formData = {\n        username: this.username,\n        password: this.password\n      };\n      this.errors = [];\n      if (this.username === '') {\n        this.errors.push('The username is missing !');\n      }\n      if (this.password === '') {\n        this.errors.push('The password is missing !');\n      }\n      if (!this.errors.length) {\n        axios.post('/api/v1/users/', formData).then(response => {\n          toast({\n            message: 'Account created with success!',\n            type: 'is-success',\n            dismissible: true,\n            pauseOnHover: true,\n            duration: 2000,\n            position: 'bottom-right'\n          });\n          this.$router.push('/log-in');\n        }).catch(error => {\n          if (error.response) {\n            for (const property in error.response.data) {\n              this.errors.push(`${property}: ${error.response.data[property]}`);\n            }\n            console.log(JSON.stringify(error.response.data));\n          } else if (error.message) {\n            this.error.push('Something went wrong . Please try again');\n            console.log(JSON.stringify(error));\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","name","data","username","password","errors","mounted","document","title","methods","submitForm","defaults","headers","common","localStorage","removeItem","formData","push","length","post","then","response","message","type","dismissible","pauseOnHover","duration","position","$router","catch","error","property","console","log","JSON","stringify"],"sources":["/home/osboxes/0dir/shipshop/shipshop-ux/src/views/LogInView.vue"],"sourcesContent":["<template>\n    <div class=\"page-sign-up\">\n        <div class=\"columns\">\n            <div class=\"column is-4 is-offset-4\">\n                <h1 class=\"title\">Log In</h1>\n                <form @submit.prevent=\"submitForm\">\n                    \n                    <div class=\"field\">\n                        <label for=\"\">UserName</label>\n                        <div class=\"control\">\n                            <input type=\"text\" class=\"input\" v-model=\"username\" />\n\n                        </div>\n                    </div>\n                    <div class=\"fields\">\n                        <label>Password</label>\n                        <div class=\"control\">\n                            <input type=\"password\" class=\"input\" v-model=\"password\">\n                        </div>\n                    </div>\n\n                    <div class=\"notificatino is-danger\" v-if=\"errors.length\">\n                        <p \n                            v-for=\"error in errors\"\n                            v-bind:key=\"error\"\n                        >\n                            {{ error }}\n                        </p>\n                    </div>\n\n                    <div class=\"field\">\n                        <div class=\"control\">\n                            <button class=\"button is-dark mt-3\">Log In</button>\n                        </div>\n                    </div>\n\n                    <hr />\n                        <p class=\"bd-footer-tsp\">\n                            You don't have an account <router-link to=\"/sign-up\">Sign Up</router-link> \n                        </p>\n                         \n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from 'axios'\n    import { toast } from 'bulma-toast'\n\n\n    export default{\n        name:'LogInView',\n        data(){\n            return{\n                username:'',\n                password:'',\n                errors:[]\n            }\n        },\n        mounted(){\n            document.title='ShipShop: Log In'\n        },\n        methods:{\n            async submitForm(){\n                \n                axios.defaults.headers.common['Authorization']=''\n\n                localStorage.removeItem('token')\n\n                const formData={\n                    username:this.username,\n                    password:this.password\n                }\n\n                this.errors=[]\n\n                 if(this.username===''){\n                    this.errors.push('The username is missing !')\n                }\n\n                if(this.password===''){\n                    this.errors.push('The password is missing !')\n                }\n\n                if(!this.errors.length){\n                    \n\n                    axios\n                        .post('/api/v1/users/',formData)\n                        .then(response=>{\n                            toast({\n                                message:'Account created with success!',\n                                type:'is-success',\n                                dismissible:true,\n                                pauseOnHover:true,\n                                duration:2000,\n                                position:'bottom-right'\n                            })\n\n                            this.$router.push('/log-in')\n                        })\n                        .catch(error=>{\n\n                            if(error.response){\n\n                                for(const property in error.response.data){\n                                    this.errors.push(`${property}: ${error.response.data[property]}`)\n                                }\n\n                                console.log(JSON.stringify(error.response.data))\n                            }else if(error.message){\n                                this.error.push('Something went wrong . Please try again')\n                                \n                                console.log(JSON.stringify(error))\n                            }\n                        })\n                }\n\n            }\n        }\n\n    }\n</script>"],"mappings":";AAiDI,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,KAAI,QAAS,aAAY;AAGlC,eAAc;EACVC,IAAI,EAAC,WAAW;EAChBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC,EAAE;MACXC,MAAM,EAAC;IACX;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAE;IACLC,QAAQ,CAACC,KAAK,GAAC,kBAAiB;EACpC,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,UAAUA,CAAA,EAAE;MAEdX,KAAK,CAACY,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAC,EAAC;MAEhDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAE/B,MAAMC,QAAQ,GAAC;QACXb,QAAQ,EAAC,IAAI,CAACA,QAAQ;QACtBC,QAAQ,EAAC,IAAI,CAACA;MAClB;MAEA,IAAI,CAACC,MAAM,GAAC,EAAC;MAEZ,IAAG,IAAI,CAACF,QAAQ,KAAG,EAAE,EAAC;QACnB,IAAI,CAACE,MAAM,CAACY,IAAI,CAAC,2BAA2B;MAChD;MAEA,IAAG,IAAI,CAACb,QAAQ,KAAG,EAAE,EAAC;QAClB,IAAI,CAACC,MAAM,CAACY,IAAI,CAAC,2BAA2B;MAChD;MAEA,IAAG,CAAC,IAAI,CAACZ,MAAM,CAACa,MAAM,EAAC;QAGnBnB,KAAI,CACCoB,IAAI,CAAC,gBAAgB,EAACH,QAAQ,EAC9BI,IAAI,CAACC,QAAQ,IAAE;UACZrB,KAAK,CAAC;YACFsB,OAAO,EAAC,+BAA+B;YACvCC,IAAI,EAAC,YAAY;YACjBC,WAAW,EAAC,IAAI;YAChBC,YAAY,EAAC,IAAI;YACjBC,QAAQ,EAAC,IAAI;YACbC,QAAQ,EAAC;UACb,CAAC;UAED,IAAI,CAACC,OAAO,CAACX,IAAI,CAAC,SAAS;QAC/B,CAAC,EACAY,KAAK,CAACC,KAAK,IAAE;UAEV,IAAGA,KAAK,CAACT,QAAQ,EAAC;YAEd,KAAI,MAAMU,QAAO,IAAKD,KAAK,CAACT,QAAQ,CAACnB,IAAI,EAAC;cACtC,IAAI,CAACG,MAAM,CAACY,IAAI,CAAE,GAAEc,QAAS,KAAID,KAAK,CAACT,QAAQ,CAACnB,IAAI,CAAC6B,QAAQ,CAAE,EAAC;YACpE;YAEAC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,KAAK,CAACT,QAAQ,CAACnB,IAAI,CAAC;UACnD,CAAC,MAAK,IAAG4B,KAAK,CAACR,OAAO,EAAC;YACnB,IAAI,CAACQ,KAAK,CAACb,IAAI,CAAC,yCAAyC;YAEzDe,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;UACrC;QACJ,CAAC;MACT;IAEJ;EACJ;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
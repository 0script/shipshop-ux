{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Checkout',\n  data() {\n    return {\n      cart: {},\n      token: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      address: '',\n      place: '',\n      errors: []\n    };\n  },\n  mounted() {\n    this.cart = this.$store.state.cart;\n    this.token = this.$store.state.token;\n  },\n  computed: {\n    cartTotalLength() {\n      return this.cart.items.reduce((acc, curlVal) => {\n        return acc += curlVal.quantity;\n      }, 0);\n    },\n    cartTotalPrice() {\n      return this.cart.items.reduce((acc, curlVal) => {\n        return acc += curlVal.product.price * curlVal.quantity;\n      }, 0);\n    }\n  },\n  methods: {\n    removeFromCart(item) {\n      this.cart.items = this.cart.items.filter(i => i.product.id !== item.product.id);\n    },\n    getItemTotal(item) {\n      return item.quantity * item.product.price;\n    },\n    submitForm(mode) {\n      this.errors = [];\n      if (mode === 'e-pay') {\n        this.errors.push('Sorry !! Online payment is not available !');\n      }\n      if (this.first_name === '') {\n        this.errors.push('First Name is required !');\n      }\n      if (this.last_name === '') {\n        this.errors.push('Last Name is required !');\n      }\n      if (this.email === '') {\n        this.errors.push('Email is required !');\n      }\n      if (this.phone === '') {\n        this.errors.push('Phone number is required !');\n      }\n      if (this.address === '') {\n        this.errors.push('Address is required !');\n      }\n      if (this.place === '') {\n        this.errors.push('Place is required !');\n      }\n      if (!this.errors.length) {\n        this.$store.commit('setIsLoading', true);\n        this.processOrder();\n      }\n    },\n    async processOrder() {\n      const items = [];\n      for (let i = 0; i < this.cart.length; i++) {\n        const item = this.cart.items[i];\n        const obj = {\n          product: item.product.id,\n          quantity: item.quantity,\n          price: item.product.price\n        };\n        console.log('about to insert ' + obj);\n        items.push(obj);\n      }\n      const data = {\n        'first_name': this.first_name,\n        'last_name': this.last_name,\n        'email': this.email,\n        'address': this.address,\n        'place': this.place,\n        'phone': this.phone,\n        'items': items\n      };\n      console.log('data to send');\n      console.log(data);\n      console.log(data.item);\n      await axios.post('/api/v1/checkout/', data).then(response => {\n        this.$store.commit('clearCart');\n        this.$router.push('/cart/success');\n      }).catch(error => {\n        this.errors.push('Error while processing order ! Try Again !');\n        console.log(error);\n      });\n\n      // await axios\n      //     .get('/api/v1/order_token/')\n      //     .then(response=>{\n      //         // this.$store.commit('clearCart')\n      //         console.log(response.data.token)\n      //         this.token\n\n      //     })\n      //     .catch(error=>{\n      //         this.errors.push('Error while processing order ! Try Again !')\n      //         console.log(error)\n      //     })\n\n      console.log(this.token);\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","cart","token","first_name","last_name","email","phone","address","place","errors","mounted","$store","state","computed","cartTotalLength","items","reduce","acc","curlVal","quantity","cartTotalPrice","product","price","methods","removeFromCart","item","filter","i","id","getItemTotal","submitForm","mode","push","length","commit","processOrder","obj","console","log","post","then","response","$router","catch","error"],"sources":["/home/osboxes/0dir/shipshop/shipshop-ux/src/views/CheckoutView.vue"],"sourcesContent":["<template>\n\n    <div class=\"page-checkout\">\n        <div class=\"columns is-multiline\">\n\n            <div class=\"column is-12\">\n                <h1 class=\"title\">Checkout</h1>\n            </div>\n        </div>\n\n        <div class=\"column is-12\">\n            <table class=\"table is-fullwidth\">\n                <thead>\n                    <tr>\n                        <th>Product</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Totla</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr\n                        v-for=\"item in cart.items\"\n                        v-bind:key=\"item.product.id\"\n                    >\n                        <th>{{ item.product.name }}</th>\n                        <th>Rwf{{ item.product.price }}</th>\n                        <th>{{ item.quantity }}</th>\n                        <th>{{ getItemTotal(item).toFixed(2) }}</th>\n                    </tr>\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <th colspan=\"2\">Total</th>\n                        <th>{{ cartTotalLength }}</th>\n                        <th>{{ cartTotalPrice }}</th>\n                    </tr>\n\n\n                </tfoot>\n            </table>\n        </div>\n\n        <div class=\"column is-12\">\n\n            <h2 class=\"subtitle\">Shiping Detail</h2>\n            <p class=\"has-text-grey mb-4\">* All Fields Are Required</p>\n            \n            <div class=\"columns is-multiline\">\n\n                <div class=\"column is-6\">\n\n                    <div class=\"field\">\n                        <label >First Name*</label>\n                        <div class=\"control\">\n                            <input type=\"text\" class=\"input\" v-model=\"first_name\">\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label>Last Name*</label>\n                        <div class=\"control\">\n                            <input type=\"text\" class=\"input\" v-model=\"last_name\">\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label >Email*</label>\n                        <div class=\"control\">\n                            <input type=\"email\" class=\"input\" v-model=\"email\">\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"column is-6\">\n\n                    <div class=\"field\">\n                        <label >Phone*</label>\n                        <div class=\"control\">\n                            <input type=\"tel\" class=\"input\" v-model=\"phone\">\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label>Address*</label>\n                        <div class=\"control\">\n                            <input type=\"text\" class=\"input\" v-model=\"address\">\n                        </div>\n                    </div>\n                    <div class=\"field\">\n                        <label >Place*</label>\n                        <div class=\"control\">\n                            <input type=\"text\" class=\"input\" v-model=\"place\">\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"column is-12\">\n                    <div class=\"notification is-danger mt-4\" v-if=\"errors.length\">\n                        <p \n                            v-for=\"error in errors\"\n                            v-bind:key=\"error\"\n                        >\n                            {{ error }}\n                        </p>\n                    </div>\n                    <hr />\n\n                    <template v-if=\"cartTotalLength\">\n                        <button class=\"button is-dark m-3\"  @click=\"submitForm('e-pay')\">Online Payment</button>\n                        <button class=\"button is-dark m-3\" @click=\"submitForm('order')\">Place Order Pay On Delivery</button>\n\n                    </template>\n                </div>\n\n    \n\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from 'axios'\n\n    export default{\n        name:'Checkout',\n        data(){\n            return{\n                cart:{},\n                token:'',\n                first_name:'',\n                last_name:'',\n                email:'',\n                phone:'',\n                address:'',\n                place:'',\n                errors:[]\n            }\n        },\n        mounted(){\n            this.cart=this.$store.state.cart\n            this.token=this.$store.state.token\n        },\n        computed:{\n            cartTotalLength(){\n                return this.cart.items.reduce((acc,curlVal)=>{\n                    return acc+=curlVal.quantity\n                },0 )\n            },\n            cartTotalPrice(){\n                return this.cart.items.reduce((acc,curlVal)=>{\n                    return acc+=curlVal.product.price*curlVal.quantity\n                },0 )\n            }\n        },\n        methods:{\n            removeFromCart(item){\n                this.cart.items=this.cart.items.filter(i=>i.product.id !== item.product.id)\n            },\n            getItemTotal(item){\n                return item.quantity * item.product.price\n            },\n            submitForm(mode){\n                \n                this.errors=[]\n\n                if(mode==='e-pay'){\n                    this.errors.push('Sorry !! Online payment is not available !')\n                }\n\n                if(this.first_name===''){\n                    this.errors.push('First Name is required !')\n                }\n\n                if(this.last_name===''){\n                    this.errors.push('Last Name is required !')\n                }\n\n                if(this.email===''){\n                    this.errors.push('Email is required !')\n                }\n\n                if(this.phone===''){\n                    this.errors.push('Phone number is required !')\n                }\n\n                if(this.address===''){\n                    this.errors.push('Address is required !')\n                }\n\n                if(this.place===''){\n                    this.errors.push('Place is required !')\n                }\n\n                if(!this.errors.length){\n\n                    this.$store.commit('setIsLoading',true)\n\n                    this.processOrder()\n                }\n\n            },\n            async processOrder(){\n\n                const items=[]\n                \n                for(let i=0;i<this.cart.length;i++){\n\n                    const item=this.cart.items[i]\n                    const obj={\n                        product:item.product.id,\n                        quantity:item.quantity,\n                        price:item.product.price\n                    }\n\n                    console.log('about to insert '+obj)\n\n                    items.push(obj)\n\n                }\n\n                const data={\n                    'first_name':this.first_name,\n                    'last_name':this.last_name,\n                    'email':this.email,\n                    'address':this.address,\n                    'place':this.place,\n                    'phone':this.phone,\n                    'items':items,\n                }\n\n                console.log('data to send')\n                console.log(data)\n                console.log(data.item)\n\n                await axios\n                    .post('/api/v1/checkout/',data)\n                    .then(response=>{\n                        this.$store.commit('clearCart')\n                        this.$router.push('/cart/success')\n                    })\n                    .catch(error=>{\n                        this.errors.push('Error while processing order ! Try Again !')\n                        console.log(error)\n                    })\n                \n                // await axios\n                //     .get('/api/v1/order_token/')\n                //     .then(response=>{\n                //         // this.$store.commit('clearCart')\n                //         console.log(response.data.token)\n                //         this.token\n\n                //     })\n                //     .catch(error=>{\n                //         this.errors.push('Error while processing order ! Try Again !')\n                //         console.log(error)\n                //     })\n                \n                console.log(this.token)\n                    this.$store.commit('setIsLoading',false)\n            }\n        }\n    }\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}